<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" href="/styles/product.css" />
  </head>
  <body>
    <%- include(loggedIn ? 'header_guest' : 'header', { username: username }) %>

    <div class="product-main">
      <div class="featured">
        <h6>Grab upto 30% Off on Selected Mobiles</h6>
        <button>View</button>
      </div>
      <div class="all-products">
        
      </div>
      <div class="load-more">
        
      </div>

      
    </div>
    <script>
      const loadMoreButton = document.getElementById('loadMore');
      const allproducts = document.querySelector('.all-products');
      const productMain = document.querySelector('.product-main');
      const loadMoreDiv = document.querySelector('.load-more');

      let currentPage = <%= current_page %>;
      const totalPages = <%= total_pages %>;
      let loggedInFlag =<%= loggedIn %>;
  
      const checkNextPage = (currentPage) => {
        const nextPageBtnFlag = document.querySelector('#nextPageBtn');

        if (currentPage < totalPages) {
          if (nextPageBtnFlag) {
            nextPageBtnFlag.parentNode.removeChild(nextPageBtnFlag);
          }

          const nextPageBtn = document.createElement('button');
          nextPageBtn.innerText = 'Next Page';
          nextPageBtn.id = 'nextPageBtn';
          loadMoreDiv.appendChild(nextPageBtn);

          nextPageBtn.addEventListener('click', async () => {
            if (currentPage < totalPages) {
              currentPage++;
              const response = await fetch(`/products/getMoreData?page=${currentPage}`);
              const newProducts = await response.json();
              renderProducts(newProducts);
              checkPrevPage(currentPage);
              checkNextPage(currentPage);
            }
          });
        } else {
          if (nextPageBtnFlag) {
            nextPageBtnFlag.parentNode.removeChild(nextPageBtnFlag);
          }
        }
      };

      const checkPrevPage = (currentPage) => {
        const prevPageBtnFlag = document.querySelector('#prevPageBtn');

        if (currentPage > 1) {
          if (prevPageBtnFlag) {
            prevPageBtnFlag.parentNode.removeChild(prevPageBtnFlag);
          }

          const prevPageBtn = document.createElement('button');
          prevPageBtn.innerText = 'Previous Page';
          prevPageBtn.id = 'prevPageBtn';
          loadMoreDiv.appendChild(prevPageBtn);

          prevPageBtn.addEventListener('click', async () => {
            if (currentPage > 1) {
              currentPage--;
              const response = await fetch(`/products/getMoreData?page=${currentPage}`);
              const newProducts = await response.json();
              renderProducts(newProducts);
              checkPrevPage(currentPage);
              checkNextPage(currentPage);
            }
          });
        } else {
          if (prevPageBtnFlag) {
            prevPageBtnFlag.parentNode.removeChild(prevPageBtnFlag);
          }
        }
      };

      const renderProducts = (data) => {
        allproducts.innerHTML=''
        data.forEach((item) => {
          const singleProduct = document.createElement('div');
          singleProduct.className = 'single-product';
  
          const productImage = document.createElement('img');
          productImage.src = item.imagelink;
          productImage.alt = 'product';
  
          const productInfo = document.createElement('div');
          productInfo.className = 'product-information';
          productInfo.innerHTML = `
            <h6>${item.name}</h6>
            <div class="links">
              <a class="view-details">View Details</a>
              <a class='cart'>Add to Cart</a>
            </div>
          `;

          const viewDetailsLink = productInfo.querySelector('.view-details');
          viewDetailsLink.addEventListener('click', () => {
            const popupDiv = document.createElement('div');
            popupDiv.innerHTML =`
              <p>${item.details}<p>
              <a class='clearpopup'>X</a>
            ` 
            popupDiv.className ="showPopup"
            productMain.appendChild(popupDiv);

            const clearpopupbtn =document.querySelector('.clearpopup');
            clearpopupbtn.addEventListener('click', ()=>{
              productMain.removeChild(popupDiv);
            })
          });

          const addToCartBtn = productInfo.querySelector('.cart');
          addToCartBtn.addEventListener('click', async ()=>{

            event.preventDefault();

            if (loggedInFlag) {
              const response  = await fetch(`/products/cart?itemId=${item._id}`, {
                method: "POST"
              });

              if(response.ok){
                console.log("Added to Cart");
              }
            } else {
              window.alert("You are not logged in");
            }
          })


          singleProduct.appendChild(productImage);
          singleProduct.appendChild(productInfo);
          allproducts.appendChild(singleProduct);
        });
      };
  
      renderProducts(<%- JSON.stringify(data) %>);
      checkNextPage(currentPage);
      checkNextPage(currentPage);
      

      
     
    </script>
  </body>
</html>
